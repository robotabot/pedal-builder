<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        1igAxNb+Fd4OpktNnpSWAAAAAElFTkSuQmCC
</value>
  </data>
</root>